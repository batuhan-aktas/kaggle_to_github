{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":9396975,"sourceType":"datasetVersion","datasetId":5703446}],"dockerImageVersionId":30761,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# Business Problem\n# FLO wants to segment its customers and determine marketing strategies according to these segments.\n# For this purpose, customer behaviors will be defined and groups will be created according to these behavior clusters..\n\n# Data Set Story\n# The data set consists of information obtained from the past shopping behaviors of customers who made their last purchases as OmniChannel (both online and offline shopping) in 2020 - 2021.\n\n# master_id: Unique customer number\n# order_channel: Which channel is used for the shopping platform (Android, ios, Desktop, Mobile, Offline)\n# last_order_channel: The channel where the last shopping was made\n# first_order_date: The customer's first shopping date\n# last_order_date: The customer's last shopping date\n# last_order_date_online: The customer's last shopping date on the online platform\n# last_order_date_offline: The customer's last shopping date on the offline platform\n# order_num_total_ever_online: The total number of shopping made by the customer on the online platform\n# order_num_total_ever_offline: The total number of shopping made by the customer offline\n# customer_value_total_ever_offline: The total amount paid by the customer for offline shopping\n# customer_value_total_ever_online: The total amount paid by the customer for online shopping\n# customer_value_total_ever_online: The total amount paid by the customer for online shopping\n# interested_in_categories_12: The customer's last List of categories she shopped in 12 months","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-09-14T22:24:51.132952Z","iopub.execute_input":"2024-09-14T22:24:51.133438Z","iopub.status.idle":"2024-09-14T22:24:51.140145Z","shell.execute_reply.started":"2024-09-14T22:24:51.133392Z","shell.execute_reply":"2024-09-14T22:24:51.138770Z"},"trusted":true},"execution_count":100,"outputs":[]},{"cell_type":"code","source":"# TASK 1: Data Understanding and Preparation\n# 1. Read flo_data_20K.csv data.\nimport datetime as dt\nfrom datetime import timedelta\nimport pandas as pd\npd.set_option('display.max_columns', None)\npd.set_option('display.max_rows', None)\npd.set_option('display.width', 2000)\npd.set_option('display.float_format', lambda x: '%.2f' % x)\n\ndf_ = pd.read_csv(\"/kaggle/input/flo-data-20k-csv/flo_data_20k.csv\")\ndf = df_.copy()","metadata":{"execution":{"iopub.status.busy":"2024-09-14T22:24:51.142686Z","iopub.execute_input":"2024-09-14T22:24:51.143405Z","iopub.status.idle":"2024-09-14T22:24:51.233538Z","shell.execute_reply.started":"2024-09-14T22:24:51.143323Z","shell.execute_reply":"2024-09-14T22:24:51.232079Z"},"trusted":true},"execution_count":101,"outputs":[]},{"cell_type":"code","source":"# 2. In the dataset:\n# a. First 10 observations\ndf.head(10)","metadata":{"execution":{"iopub.status.busy":"2024-09-14T22:24:51.235752Z","iopub.execute_input":"2024-09-14T22:24:51.236159Z","iopub.status.idle":"2024-09-14T22:24:51.256548Z","shell.execute_reply.started":"2024-09-14T22:24:51.236114Z","shell.execute_reply":"2024-09-14T22:24:51.255286Z"},"trusted":true},"execution_count":102,"outputs":[{"execution_count":102,"output_type":"execute_result","data":{"text/plain":"                              master_id order_channel last_order_channel first_order_date last_order_date last_order_date_online last_order_date_offline  order_num_total_ever_online  order_num_total_ever_offline  customer_value_total_ever_offline  customer_value_total_ever_online       interested_in_categories_12\n0  cc294636-19f0-11eb-8d74-000d3a38a36f   Android App            Offline       2020-10-30      2021-02-26             2021-02-21              2021-02-26                         4.00                          1.00                             139.99                            799.38                           [KADIN]\n1  f431bd5a-ab7b-11e9-a2fc-000d3a38a36f   Android App             Mobile       2017-02-08      2021-02-16             2021-02-16              2020-01-10                        19.00                          2.00                             159.97                           1853.58  [ERKEK, COCUK, KADIN, AKTIFSPOR]\n2  69b69676-1a40-11ea-941b-000d3a38a36f   Android App        Android App       2019-11-27      2020-11-27             2020-11-27              2019-12-01                         3.00                          2.00                             189.97                            395.35                    [ERKEK, KADIN]\n3  1854e56c-491f-11eb-806e-000d3a38a36f   Android App        Android App       2021-01-06      2021-01-17             2021-01-17              2021-01-06                         1.00                          1.00                              39.99                             81.98               [AKTIFCOCUK, COCUK]\n4  d6ea1074-f1f5-11e9-9346-000d3a38a36f       Desktop            Desktop       2019-08-03      2021-03-07             2021-03-07              2019-08-03                         1.00                          1.00                              49.99                            159.99                       [AKTIFSPOR]\n5  e585280e-aae1-11e9-a2fc-000d3a38a36f       Desktop            Offline       2018-11-18      2021-03-13             2018-11-18              2021-03-13                         1.00                          2.00                             150.87                             49.99                           [KADIN]\n6  c445e4ee-6242-11ea-9d1a-000d3a38a36f   Android App        Android App       2020-03-04      2020-10-18             2020-10-18              2020-03-04                         3.00                          1.00                              59.99                            315.94                       [AKTIFSPOR]\n7  3f1b4dc8-8a7d-11ea-8ec0-000d3a38a36f        Mobile            Offline       2020-05-15      2020-08-12             2020-05-15              2020-08-12                         1.00                          1.00                              49.99                            113.64                           [COCUK]\n8  cfbda69e-5b4f-11ea-aca7-000d3a38a36f   Android App        Android App       2020-01-23      2021-03-07             2021-03-07              2020-01-25                         3.00                          2.00                             120.48                            934.21             [ERKEK, COCUK, KADIN]\n9  1143f032-440d-11ea-8b43-000d3a38a36f        Mobile             Mobile       2019-07-30      2020-10-04             2020-10-04              2019-07-30                         1.00                          1.00                              69.98                             95.98                [KADIN, AKTIFSPOR]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>master_id</th>\n      <th>order_channel</th>\n      <th>last_order_channel</th>\n      <th>first_order_date</th>\n      <th>last_order_date</th>\n      <th>last_order_date_online</th>\n      <th>last_order_date_offline</th>\n      <th>order_num_total_ever_online</th>\n      <th>order_num_total_ever_offline</th>\n      <th>customer_value_total_ever_offline</th>\n      <th>customer_value_total_ever_online</th>\n      <th>interested_in_categories_12</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>cc294636-19f0-11eb-8d74-000d3a38a36f</td>\n      <td>Android App</td>\n      <td>Offline</td>\n      <td>2020-10-30</td>\n      <td>2021-02-26</td>\n      <td>2021-02-21</td>\n      <td>2021-02-26</td>\n      <td>4.00</td>\n      <td>1.00</td>\n      <td>139.99</td>\n      <td>799.38</td>\n      <td>[KADIN]</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>f431bd5a-ab7b-11e9-a2fc-000d3a38a36f</td>\n      <td>Android App</td>\n      <td>Mobile</td>\n      <td>2017-02-08</td>\n      <td>2021-02-16</td>\n      <td>2021-02-16</td>\n      <td>2020-01-10</td>\n      <td>19.00</td>\n      <td>2.00</td>\n      <td>159.97</td>\n      <td>1853.58</td>\n      <td>[ERKEK, COCUK, KADIN, AKTIFSPOR]</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>69b69676-1a40-11ea-941b-000d3a38a36f</td>\n      <td>Android App</td>\n      <td>Android App</td>\n      <td>2019-11-27</td>\n      <td>2020-11-27</td>\n      <td>2020-11-27</td>\n      <td>2019-12-01</td>\n      <td>3.00</td>\n      <td>2.00</td>\n      <td>189.97</td>\n      <td>395.35</td>\n      <td>[ERKEK, KADIN]</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1854e56c-491f-11eb-806e-000d3a38a36f</td>\n      <td>Android App</td>\n      <td>Android App</td>\n      <td>2021-01-06</td>\n      <td>2021-01-17</td>\n      <td>2021-01-17</td>\n      <td>2021-01-06</td>\n      <td>1.00</td>\n      <td>1.00</td>\n      <td>39.99</td>\n      <td>81.98</td>\n      <td>[AKTIFCOCUK, COCUK]</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>d6ea1074-f1f5-11e9-9346-000d3a38a36f</td>\n      <td>Desktop</td>\n      <td>Desktop</td>\n      <td>2019-08-03</td>\n      <td>2021-03-07</td>\n      <td>2021-03-07</td>\n      <td>2019-08-03</td>\n      <td>1.00</td>\n      <td>1.00</td>\n      <td>49.99</td>\n      <td>159.99</td>\n      <td>[AKTIFSPOR]</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>e585280e-aae1-11e9-a2fc-000d3a38a36f</td>\n      <td>Desktop</td>\n      <td>Offline</td>\n      <td>2018-11-18</td>\n      <td>2021-03-13</td>\n      <td>2018-11-18</td>\n      <td>2021-03-13</td>\n      <td>1.00</td>\n      <td>2.00</td>\n      <td>150.87</td>\n      <td>49.99</td>\n      <td>[KADIN]</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>c445e4ee-6242-11ea-9d1a-000d3a38a36f</td>\n      <td>Android App</td>\n      <td>Android App</td>\n      <td>2020-03-04</td>\n      <td>2020-10-18</td>\n      <td>2020-10-18</td>\n      <td>2020-03-04</td>\n      <td>3.00</td>\n      <td>1.00</td>\n      <td>59.99</td>\n      <td>315.94</td>\n      <td>[AKTIFSPOR]</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>3f1b4dc8-8a7d-11ea-8ec0-000d3a38a36f</td>\n      <td>Mobile</td>\n      <td>Offline</td>\n      <td>2020-05-15</td>\n      <td>2020-08-12</td>\n      <td>2020-05-15</td>\n      <td>2020-08-12</td>\n      <td>1.00</td>\n      <td>1.00</td>\n      <td>49.99</td>\n      <td>113.64</td>\n      <td>[COCUK]</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>cfbda69e-5b4f-11ea-aca7-000d3a38a36f</td>\n      <td>Android App</td>\n      <td>Android App</td>\n      <td>2020-01-23</td>\n      <td>2021-03-07</td>\n      <td>2021-03-07</td>\n      <td>2020-01-25</td>\n      <td>3.00</td>\n      <td>2.00</td>\n      <td>120.48</td>\n      <td>934.21</td>\n      <td>[ERKEK, COCUK, KADIN]</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>1143f032-440d-11ea-8b43-000d3a38a36f</td>\n      <td>Mobile</td>\n      <td>Mobile</td>\n      <td>2019-07-30</td>\n      <td>2020-10-04</td>\n      <td>2020-10-04</td>\n      <td>2019-07-30</td>\n      <td>1.00</td>\n      <td>1.00</td>\n      <td>69.98</td>\n      <td>95.98</td>\n      <td>[KADIN, AKTIFSPOR]</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"# b. Variable names\ndf.columns","metadata":{"execution":{"iopub.status.busy":"2024-09-14T22:24:51.258165Z","iopub.execute_input":"2024-09-14T22:24:51.258589Z","iopub.status.idle":"2024-09-14T22:24:51.271176Z","shell.execute_reply.started":"2024-09-14T22:24:51.258545Z","shell.execute_reply":"2024-09-14T22:24:51.269840Z"},"trusted":true},"execution_count":103,"outputs":[{"execution_count":103,"output_type":"execute_result","data":{"text/plain":"Index(['master_id', 'order_channel', 'last_order_channel', 'first_order_date', 'last_order_date', 'last_order_date_online', 'last_order_date_offline', 'order_num_total_ever_online', 'order_num_total_ever_offline', 'customer_value_total_ever_offline', 'customer_value_total_ever_online', 'interested_in_categories_12'], dtype='object')"},"metadata":{}}]},{"cell_type":"code","source":"# c. Descriptive statistics\ndf.shape\ndf.describe()\n","metadata":{"execution":{"iopub.status.busy":"2024-09-14T22:24:51.274206Z","iopub.execute_input":"2024-09-14T22:24:51.274700Z","iopub.status.idle":"2024-09-14T22:24:51.302190Z","shell.execute_reply.started":"2024-09-14T22:24:51.274655Z","shell.execute_reply":"2024-09-14T22:24:51.301005Z"},"trusted":true},"execution_count":104,"outputs":[{"execution_count":104,"output_type":"execute_result","data":{"text/plain":"       order_num_total_ever_online  order_num_total_ever_offline  customer_value_total_ever_offline  customer_value_total_ever_online\ncount                     19945.00                      19945.00                           19945.00                          19945.00\nmean                          3.11                          1.91                             253.92                            497.32\nstd                           4.23                          2.06                             301.53                            832.60\nmin                           1.00                          1.00                              10.00                             12.99\n25%                           1.00                          1.00                              99.99                            149.98\n50%                           2.00                          1.00                             179.98                            286.46\n75%                           4.00                          2.00                             319.97                            578.44\nmax                         200.00                        109.00                           18119.14                          45220.13","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>order_num_total_ever_online</th>\n      <th>order_num_total_ever_offline</th>\n      <th>customer_value_total_ever_offline</th>\n      <th>customer_value_total_ever_online</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>19945.00</td>\n      <td>19945.00</td>\n      <td>19945.00</td>\n      <td>19945.00</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>3.11</td>\n      <td>1.91</td>\n      <td>253.92</td>\n      <td>497.32</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>4.23</td>\n      <td>2.06</td>\n      <td>301.53</td>\n      <td>832.60</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>1.00</td>\n      <td>1.00</td>\n      <td>10.00</td>\n      <td>12.99</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>1.00</td>\n      <td>1.00</td>\n      <td>99.99</td>\n      <td>149.98</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>2.00</td>\n      <td>1.00</td>\n      <td>179.98</td>\n      <td>286.46</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>4.00</td>\n      <td>2.00</td>\n      <td>319.97</td>\n      <td>578.44</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>200.00</td>\n      <td>109.00</td>\n      <td>18119.14</td>\n      <td>45220.13</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"# d. Null values\ndf.isnull().sum()\n","metadata":{"execution":{"iopub.status.busy":"2024-09-14T22:24:51.303421Z","iopub.execute_input":"2024-09-14T22:24:51.303740Z","iopub.status.idle":"2024-09-14T22:24:51.332547Z","shell.execute_reply.started":"2024-09-14T22:24:51.303703Z","shell.execute_reply":"2024-09-14T22:24:51.331199Z"},"trusted":true},"execution_count":105,"outputs":[{"execution_count":105,"output_type":"execute_result","data":{"text/plain":"master_id                            0\norder_channel                        0\nlast_order_channel                   0\nfirst_order_date                     0\nlast_order_date                      0\nlast_order_date_online               0\nlast_order_date_offline              0\norder_num_total_ever_online          0\norder_num_total_ever_offline         0\ncustomer_value_total_ever_offline    0\ncustomer_value_total_ever_online     0\ninterested_in_categories_12          0\ndtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"# e. Variable types\ndf.info()","metadata":{"execution":{"iopub.status.busy":"2024-09-14T22:24:51.334002Z","iopub.execute_input":"2024-09-14T22:24:51.334423Z","iopub.status.idle":"2024-09-14T22:24:51.367798Z","shell.execute_reply.started":"2024-09-14T22:24:51.334337Z","shell.execute_reply":"2024-09-14T22:24:51.366451Z"},"trusted":true},"execution_count":106,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 19945 entries, 0 to 19944\nData columns (total 12 columns):\n #   Column                             Non-Null Count  Dtype  \n---  ------                             --------------  -----  \n 0   master_id                          19945 non-null  object \n 1   order_channel                      19945 non-null  object \n 2   last_order_channel                 19945 non-null  object \n 3   first_order_date                   19945 non-null  object \n 4   last_order_date                    19945 non-null  object \n 5   last_order_date_online             19945 non-null  object \n 6   last_order_date_offline            19945 non-null  object \n 7   order_num_total_ever_online        19945 non-null  float64\n 8   order_num_total_ever_offline       19945 non-null  float64\n 9   customer_value_total_ever_offline  19945 non-null  float64\n 10  customer_value_total_ever_online   19945 non-null  float64\n 11  interested_in_categories_12        19945 non-null  object \ndtypes: float64(4), object(8)\nmemory usage: 1.8+ MB\n","output_type":"stream"}]},{"cell_type":"code","source":"#3. Omnichannel refers to customers shopping from both online and offline platforms.\n# Create new variables for each customer's total purchase count and spending.\n\n#total order count\ndf[\"order_num_total\"] = df[\"order_num_total_ever_offline\"] + df[\"order_num_total_ever_online\"]\n\n#total purchase amount\ndf[\"customer_value_total\"] = df[\"customer_value_total_ever_offline\"] + df[\"customer_value_total_ever_online\"]","metadata":{"execution":{"iopub.status.busy":"2024-09-14T22:24:51.369597Z","iopub.execute_input":"2024-09-14T22:24:51.369983Z","iopub.status.idle":"2024-09-14T22:24:51.378560Z","shell.execute_reply.started":"2024-09-14T22:24:51.369941Z","shell.execute_reply":"2024-09-14T22:24:51.377226Z"},"trusted":true},"execution_count":107,"outputs":[]},{"cell_type":"code","source":"# 4. Examine the variable types. Convert the type of variables that represent dates to date.\ndf.info()\ndate_columns = df.columns[df.columns.str.contains(\"date\")]\ndf[date_columns] = df[date_columns].apply(pd.to_datetime)\ndf.info()","metadata":{"execution":{"iopub.status.busy":"2024-09-14T22:24:51.380135Z","iopub.execute_input":"2024-09-14T22:24:51.380606Z","iopub.status.idle":"2024-09-14T22:24:51.460357Z","shell.execute_reply.started":"2024-09-14T22:24:51.380545Z","shell.execute_reply":"2024-09-14T22:24:51.458844Z"},"trusted":true},"execution_count":108,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 19945 entries, 0 to 19944\nData columns (total 14 columns):\n #   Column                             Non-Null Count  Dtype  \n---  ------                             --------------  -----  \n 0   master_id                          19945 non-null  object \n 1   order_channel                      19945 non-null  object \n 2   last_order_channel                 19945 non-null  object \n 3   first_order_date                   19945 non-null  object \n 4   last_order_date                    19945 non-null  object \n 5   last_order_date_online             19945 non-null  object \n 6   last_order_date_offline            19945 non-null  object \n 7   order_num_total_ever_online        19945 non-null  float64\n 8   order_num_total_ever_offline       19945 non-null  float64\n 9   customer_value_total_ever_offline  19945 non-null  float64\n 10  customer_value_total_ever_online   19945 non-null  float64\n 11  interested_in_categories_12        19945 non-null  object \n 12  order_num_total                    19945 non-null  float64\n 13  customer_value_total               19945 non-null  float64\ndtypes: float64(6), object(8)\nmemory usage: 2.1+ MB\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 19945 entries, 0 to 19944\nData columns (total 14 columns):\n #   Column                             Non-Null Count  Dtype         \n---  ------                             --------------  -----         \n 0   master_id                          19945 non-null  object        \n 1   order_channel                      19945 non-null  object        \n 2   last_order_channel                 19945 non-null  object        \n 3   first_order_date                   19945 non-null  datetime64[ns]\n 4   last_order_date                    19945 non-null  datetime64[ns]\n 5   last_order_date_online             19945 non-null  datetime64[ns]\n 6   last_order_date_offline            19945 non-null  datetime64[ns]\n 7   order_num_total_ever_online        19945 non-null  float64       \n 8   order_num_total_ever_offline       19945 non-null  float64       \n 9   customer_value_total_ever_offline  19945 non-null  float64       \n 10  customer_value_total_ever_online   19945 non-null  float64       \n 11  interested_in_categories_12        19945 non-null  object        \n 12  order_num_total                    19945 non-null  float64       \n 13  customer_value_total               19945 non-null  float64       \ndtypes: datetime64[ns](4), float64(6), object(4)\nmemory usage: 2.1+ MB\n","output_type":"stream"}]},{"cell_type":"code","source":"# 5. Look at the distribution of the number of customers, total number of products purchased and total expenses in the shopping channels.\ndf.groupby(\"order_channel\").agg({\"master_id\":\"count\",\n\"order_num_total\":\"sum\",\"customer_value_total\":\"sum\"})","metadata":{"execution":{"iopub.status.busy":"2024-09-14T22:24:51.461770Z","iopub.execute_input":"2024-09-14T22:24:51.462183Z","iopub.status.idle":"2024-09-14T22:24:51.485508Z","shell.execute_reply.started":"2024-09-14T22:24:51.462141Z","shell.execute_reply":"2024-09-14T22:24:51.484022Z"},"trusted":true},"execution_count":109,"outputs":[{"execution_count":109,"output_type":"execute_result","data":{"text/plain":"               master_id  order_num_total  customer_value_total\norder_channel                                                  \nAndroid App         9495         52269.00            7819062.76\nDesktop             2735         10920.00            1610321.46\nIos App             2833         15351.00            2525999.93\nMobile              4882         21679.00            3028183.16","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>master_id</th>\n      <th>order_num_total</th>\n      <th>customer_value_total</th>\n    </tr>\n    <tr>\n      <th>order_channel</th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Android App</th>\n      <td>9495</td>\n      <td>52269.00</td>\n      <td>7819062.76</td>\n    </tr>\n    <tr>\n      <th>Desktop</th>\n      <td>2735</td>\n      <td>10920.00</td>\n      <td>1610321.46</td>\n    </tr>\n    <tr>\n      <th>Ios App</th>\n      <td>2833</td>\n      <td>15351.00</td>\n      <td>2525999.93</td>\n    </tr>\n    <tr>\n      <th>Mobile</th>\n      <td>4882</td>\n      <td>21679.00</td>\n      <td>3028183.16</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"# 6. List the top 10 customers who brought the most profit.\ndf.sort_values('customer_value_total', ascending=False).head(10)","metadata":{"execution":{"iopub.status.busy":"2024-09-14T22:24:51.489365Z","iopub.execute_input":"2024-09-14T22:24:51.489808Z","iopub.status.idle":"2024-09-14T22:24:51.518684Z","shell.execute_reply.started":"2024-09-14T22:24:51.489762Z","shell.execute_reply":"2024-09-14T22:24:51.517354Z"},"trusted":true},"execution_count":110,"outputs":[{"execution_count":110,"output_type":"execute_result","data":{"text/plain":"                                  master_id order_channel last_order_channel first_order_date last_order_date last_order_date_online last_order_date_offline  order_num_total_ever_online  order_num_total_ever_offline  customer_value_total_ever_offline  customer_value_total_ever_online                   interested_in_categories_12  order_num_total  customer_value_total\n11150  5d1c466a-9cfd-11e9-9897-000d3a38a36f   Android App            Desktop       2013-10-11      2021-04-30             2021-04-30              2020-12-24                       200.00                          2.00                             684.97                          45220.13  [AKTIFCOCUK, ERKEK, COCUK, KADIN, AKTIFSPOR]           202.00              45905.10\n4315   d5ef8058-a5c6-11e9-a2fc-000d3a38a36f   Android App        Android App       2018-08-06      2021-02-23             2021-02-23              2020-07-06                        67.00                          1.00                             130.49                          36687.80         [AKTIFCOCUK, ERKEK, KADIN, AKTIFSPOR]            68.00              36818.29\n7613   73fd19aa-9e37-11e9-9897-000d3a38a36f       Ios App            Offline       2014-01-14      2021-05-18             2021-01-30              2021-05-18                        81.00                          1.00                            1263.76                          32654.34              [ERKEK, COCUK, KADIN, AKTIFSPOR]            82.00              33918.10\n13880  7137a5c0-7aad-11ea-8f20-000d3a38a36f       Ios App            Offline       2021-03-01      2021-04-13             2021-03-18              2021-04-13                        10.00                          1.00                             538.94                          30688.47                     [ERKEK, KADIN, AKTIFSPOR]            11.00              31227.41\n9055   47a642fe-975b-11eb-8c2a-000d3a38a36f   Android App            Offline       2021-04-07      2021-04-27             2021-04-07              2021-04-27                         1.00                          3.00                           18119.14                           2587.20                                   [AKTIFSPOR]             4.00              20706.34\n7330   a4d534a2-5b1b-11eb-8dbd-000d3a38a36f       Desktop            Desktop       2020-02-16      2021-04-30             2021-04-30              2020-12-18                        66.00                          4.00                             843.68                          17599.89                     [ERKEK, KADIN, AKTIFSPOR]            70.00              18443.57\n8068   d696c654-2633-11ea-8e1c-000d3a38a36f       Ios App            Ios App       2017-05-10      2021-04-13             2021-04-13              2019-08-15                        69.00                          1.00                              82.48                          16836.09  [AKTIFCOCUK, ERKEK, COCUK, KADIN, AKTIFSPOR]            70.00              16918.57\n163    fef57ffa-aae6-11e9-a2fc-000d3a38a36f        Mobile            Desktop       2016-11-08      2021-05-12             2021-05-12              2020-07-09                        36.00                          1.00                             180.73                          12545.37                            [ERKEK, AKTIFSPOR]            37.00              12726.10\n7223   cba59206-9dd1-11e9-9897-000d3a38a36f   Android App        Android App       2013-02-21      2021-05-09             2021-05-09              2020-01-25                       130.00                          1.00                              49.99                          12232.25         [AKTIFCOCUK, ERKEK, KADIN, AKTIFSPOR]           131.00              12282.24\n18767  fc0ce7a4-9d87-11e9-9897-000d3a38a36f       Desktop            Desktop       2018-11-24      2020-11-11             2020-11-11              2019-12-06                        18.00                          2.00                              64.97                          12038.18                                [ERKEK, KADIN]            20.00              12103.15","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>master_id</th>\n      <th>order_channel</th>\n      <th>last_order_channel</th>\n      <th>first_order_date</th>\n      <th>last_order_date</th>\n      <th>last_order_date_online</th>\n      <th>last_order_date_offline</th>\n      <th>order_num_total_ever_online</th>\n      <th>order_num_total_ever_offline</th>\n      <th>customer_value_total_ever_offline</th>\n      <th>customer_value_total_ever_online</th>\n      <th>interested_in_categories_12</th>\n      <th>order_num_total</th>\n      <th>customer_value_total</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>11150</th>\n      <td>5d1c466a-9cfd-11e9-9897-000d3a38a36f</td>\n      <td>Android App</td>\n      <td>Desktop</td>\n      <td>2013-10-11</td>\n      <td>2021-04-30</td>\n      <td>2021-04-30</td>\n      <td>2020-12-24</td>\n      <td>200.00</td>\n      <td>2.00</td>\n      <td>684.97</td>\n      <td>45220.13</td>\n      <td>[AKTIFCOCUK, ERKEK, COCUK, KADIN, AKTIFSPOR]</td>\n      <td>202.00</td>\n      <td>45905.10</td>\n    </tr>\n    <tr>\n      <th>4315</th>\n      <td>d5ef8058-a5c6-11e9-a2fc-000d3a38a36f</td>\n      <td>Android App</td>\n      <td>Android App</td>\n      <td>2018-08-06</td>\n      <td>2021-02-23</td>\n      <td>2021-02-23</td>\n      <td>2020-07-06</td>\n      <td>67.00</td>\n      <td>1.00</td>\n      <td>130.49</td>\n      <td>36687.80</td>\n      <td>[AKTIFCOCUK, ERKEK, KADIN, AKTIFSPOR]</td>\n      <td>68.00</td>\n      <td>36818.29</td>\n    </tr>\n    <tr>\n      <th>7613</th>\n      <td>73fd19aa-9e37-11e9-9897-000d3a38a36f</td>\n      <td>Ios App</td>\n      <td>Offline</td>\n      <td>2014-01-14</td>\n      <td>2021-05-18</td>\n      <td>2021-01-30</td>\n      <td>2021-05-18</td>\n      <td>81.00</td>\n      <td>1.00</td>\n      <td>1263.76</td>\n      <td>32654.34</td>\n      <td>[ERKEK, COCUK, KADIN, AKTIFSPOR]</td>\n      <td>82.00</td>\n      <td>33918.10</td>\n    </tr>\n    <tr>\n      <th>13880</th>\n      <td>7137a5c0-7aad-11ea-8f20-000d3a38a36f</td>\n      <td>Ios App</td>\n      <td>Offline</td>\n      <td>2021-03-01</td>\n      <td>2021-04-13</td>\n      <td>2021-03-18</td>\n      <td>2021-04-13</td>\n      <td>10.00</td>\n      <td>1.00</td>\n      <td>538.94</td>\n      <td>30688.47</td>\n      <td>[ERKEK, KADIN, AKTIFSPOR]</td>\n      <td>11.00</td>\n      <td>31227.41</td>\n    </tr>\n    <tr>\n      <th>9055</th>\n      <td>47a642fe-975b-11eb-8c2a-000d3a38a36f</td>\n      <td>Android App</td>\n      <td>Offline</td>\n      <td>2021-04-07</td>\n      <td>2021-04-27</td>\n      <td>2021-04-07</td>\n      <td>2021-04-27</td>\n      <td>1.00</td>\n      <td>3.00</td>\n      <td>18119.14</td>\n      <td>2587.20</td>\n      <td>[AKTIFSPOR]</td>\n      <td>4.00</td>\n      <td>20706.34</td>\n    </tr>\n    <tr>\n      <th>7330</th>\n      <td>a4d534a2-5b1b-11eb-8dbd-000d3a38a36f</td>\n      <td>Desktop</td>\n      <td>Desktop</td>\n      <td>2020-02-16</td>\n      <td>2021-04-30</td>\n      <td>2021-04-30</td>\n      <td>2020-12-18</td>\n      <td>66.00</td>\n      <td>4.00</td>\n      <td>843.68</td>\n      <td>17599.89</td>\n      <td>[ERKEK, KADIN, AKTIFSPOR]</td>\n      <td>70.00</td>\n      <td>18443.57</td>\n    </tr>\n    <tr>\n      <th>8068</th>\n      <td>d696c654-2633-11ea-8e1c-000d3a38a36f</td>\n      <td>Ios App</td>\n      <td>Ios App</td>\n      <td>2017-05-10</td>\n      <td>2021-04-13</td>\n      <td>2021-04-13</td>\n      <td>2019-08-15</td>\n      <td>69.00</td>\n      <td>1.00</td>\n      <td>82.48</td>\n      <td>16836.09</td>\n      <td>[AKTIFCOCUK, ERKEK, COCUK, KADIN, AKTIFSPOR]</td>\n      <td>70.00</td>\n      <td>16918.57</td>\n    </tr>\n    <tr>\n      <th>163</th>\n      <td>fef57ffa-aae6-11e9-a2fc-000d3a38a36f</td>\n      <td>Mobile</td>\n      <td>Desktop</td>\n      <td>2016-11-08</td>\n      <td>2021-05-12</td>\n      <td>2021-05-12</td>\n      <td>2020-07-09</td>\n      <td>36.00</td>\n      <td>1.00</td>\n      <td>180.73</td>\n      <td>12545.37</td>\n      <td>[ERKEK, AKTIFSPOR]</td>\n      <td>37.00</td>\n      <td>12726.10</td>\n    </tr>\n    <tr>\n      <th>7223</th>\n      <td>cba59206-9dd1-11e9-9897-000d3a38a36f</td>\n      <td>Android App</td>\n      <td>Android App</td>\n      <td>2013-02-21</td>\n      <td>2021-05-09</td>\n      <td>2021-05-09</td>\n      <td>2020-01-25</td>\n      <td>130.00</td>\n      <td>1.00</td>\n      <td>49.99</td>\n      <td>12232.25</td>\n      <td>[AKTIFCOCUK, ERKEK, KADIN, AKTIFSPOR]</td>\n      <td>131.00</td>\n      <td>12282.24</td>\n    </tr>\n    <tr>\n      <th>18767</th>\n      <td>fc0ce7a4-9d87-11e9-9897-000d3a38a36f</td>\n      <td>Desktop</td>\n      <td>Desktop</td>\n      <td>2018-11-24</td>\n      <td>2020-11-11</td>\n      <td>2020-11-11</td>\n      <td>2019-12-06</td>\n      <td>18.00</td>\n      <td>2.00</td>\n      <td>64.97</td>\n      <td>12038.18</td>\n      <td>[ERKEK, KADIN]</td>\n      <td>20.00</td>\n      <td>12103.15</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"# 7. Sort the top 10 customers who placed the most orders.\ndf.sort_values('order_num_total', ascending=False).head(10)","metadata":{"execution":{"iopub.status.busy":"2024-09-14T22:24:51.520205Z","iopub.execute_input":"2024-09-14T22:24:51.520636Z","iopub.status.idle":"2024-09-14T22:24:51.549942Z","shell.execute_reply.started":"2024-09-14T22:24:51.520586Z","shell.execute_reply":"2024-09-14T22:24:51.548734Z"},"trusted":true},"execution_count":111,"outputs":[{"execution_count":111,"output_type":"execute_result","data":{"text/plain":"                                  master_id order_channel last_order_channel first_order_date last_order_date last_order_date_online last_order_date_offline  order_num_total_ever_online  order_num_total_ever_offline  customer_value_total_ever_offline  customer_value_total_ever_online                   interested_in_categories_12  order_num_total  customer_value_total\n11150  5d1c466a-9cfd-11e9-9897-000d3a38a36f   Android App            Desktop       2013-10-11      2021-04-30             2021-04-30              2020-12-24                       200.00                          2.00                             684.97                          45220.13  [AKTIFCOCUK, ERKEK, COCUK, KADIN, AKTIFSPOR]           202.00              45905.10\n7223   cba59206-9dd1-11e9-9897-000d3a38a36f   Android App        Android App       2013-02-21      2021-05-09             2021-05-09              2020-01-25                       130.00                          1.00                              49.99                          12232.25         [AKTIFCOCUK, ERKEK, KADIN, AKTIFSPOR]           131.00              12282.24\n8783   a57f4302-b1a8-11e9-89fa-000d3a38a36f   Android App            Offline       2019-08-07      2020-11-04             2020-09-07              2020-11-04                         2.00                        109.00                           10239.46                            143.98  [AKTIFCOCUK, ERKEK, COCUK, KADIN, AKTIFSPOR]           111.00              10383.44\n2619   fdbe8304-a7ab-11e9-a2fc-000d3a38a36f   Android App            Offline       2018-10-18      2020-06-30             2018-10-18              2020-06-30                         1.00                         87.00                            8432.25                            139.98                                       [ERKEK]            88.00               8572.23\n6322   329968c6-a0e2-11e9-a2fc-000d3a38a36f       Ios App            Ios App       2019-02-14      2021-04-05             2021-04-05              2020-02-17                         2.00                         81.00                            3997.55                            242.81                                       [ERKEK]            83.00               4240.36\n7613   73fd19aa-9e37-11e9-9897-000d3a38a36f       Ios App            Offline       2014-01-14      2021-05-18             2021-01-30              2021-05-18                        81.00                          1.00                            1263.76                          32654.34              [ERKEK, COCUK, KADIN, AKTIFSPOR]            82.00              33918.10\n9347   44d032ee-a0d4-11e9-a2fc-000d3a38a36f        Mobile             Mobile       2019-02-11      2021-02-11             2021-02-11              2020-12-24                         3.00                         74.00                            4640.77                            543.28                            [KADIN, AKTIFSPOR]            77.00               5184.05\n10954  b27e241a-a901-11e9-a2fc-000d3a38a36f        Mobile             Mobile       2015-09-12      2021-04-01             2021-04-01              2019-10-08                        72.00                          3.00                             292.93                           5004.95         [AKTIFCOCUK, ERKEK, KADIN, AKTIFSPOR]            75.00               5297.88\n8068   d696c654-2633-11ea-8e1c-000d3a38a36f       Ios App            Ios App       2017-05-10      2021-04-13             2021-04-13              2019-08-15                        69.00                          1.00                              82.48                          16836.09  [AKTIFCOCUK, ERKEK, COCUK, KADIN, AKTIFSPOR]            70.00              16918.57\n7330   a4d534a2-5b1b-11eb-8dbd-000d3a38a36f       Desktop            Desktop       2020-02-16      2021-04-30             2021-04-30              2020-12-18                        66.00                          4.00                             843.68                          17599.89                     [ERKEK, KADIN, AKTIFSPOR]            70.00              18443.57","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>master_id</th>\n      <th>order_channel</th>\n      <th>last_order_channel</th>\n      <th>first_order_date</th>\n      <th>last_order_date</th>\n      <th>last_order_date_online</th>\n      <th>last_order_date_offline</th>\n      <th>order_num_total_ever_online</th>\n      <th>order_num_total_ever_offline</th>\n      <th>customer_value_total_ever_offline</th>\n      <th>customer_value_total_ever_online</th>\n      <th>interested_in_categories_12</th>\n      <th>order_num_total</th>\n      <th>customer_value_total</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>11150</th>\n      <td>5d1c466a-9cfd-11e9-9897-000d3a38a36f</td>\n      <td>Android App</td>\n      <td>Desktop</td>\n      <td>2013-10-11</td>\n      <td>2021-04-30</td>\n      <td>2021-04-30</td>\n      <td>2020-12-24</td>\n      <td>200.00</td>\n      <td>2.00</td>\n      <td>684.97</td>\n      <td>45220.13</td>\n      <td>[AKTIFCOCUK, ERKEK, COCUK, KADIN, AKTIFSPOR]</td>\n      <td>202.00</td>\n      <td>45905.10</td>\n    </tr>\n    <tr>\n      <th>7223</th>\n      <td>cba59206-9dd1-11e9-9897-000d3a38a36f</td>\n      <td>Android App</td>\n      <td>Android App</td>\n      <td>2013-02-21</td>\n      <td>2021-05-09</td>\n      <td>2021-05-09</td>\n      <td>2020-01-25</td>\n      <td>130.00</td>\n      <td>1.00</td>\n      <td>49.99</td>\n      <td>12232.25</td>\n      <td>[AKTIFCOCUK, ERKEK, KADIN, AKTIFSPOR]</td>\n      <td>131.00</td>\n      <td>12282.24</td>\n    </tr>\n    <tr>\n      <th>8783</th>\n      <td>a57f4302-b1a8-11e9-89fa-000d3a38a36f</td>\n      <td>Android App</td>\n      <td>Offline</td>\n      <td>2019-08-07</td>\n      <td>2020-11-04</td>\n      <td>2020-09-07</td>\n      <td>2020-11-04</td>\n      <td>2.00</td>\n      <td>109.00</td>\n      <td>10239.46</td>\n      <td>143.98</td>\n      <td>[AKTIFCOCUK, ERKEK, COCUK, KADIN, AKTIFSPOR]</td>\n      <td>111.00</td>\n      <td>10383.44</td>\n    </tr>\n    <tr>\n      <th>2619</th>\n      <td>fdbe8304-a7ab-11e9-a2fc-000d3a38a36f</td>\n      <td>Android App</td>\n      <td>Offline</td>\n      <td>2018-10-18</td>\n      <td>2020-06-30</td>\n      <td>2018-10-18</td>\n      <td>2020-06-30</td>\n      <td>1.00</td>\n      <td>87.00</td>\n      <td>8432.25</td>\n      <td>139.98</td>\n      <td>[ERKEK]</td>\n      <td>88.00</td>\n      <td>8572.23</td>\n    </tr>\n    <tr>\n      <th>6322</th>\n      <td>329968c6-a0e2-11e9-a2fc-000d3a38a36f</td>\n      <td>Ios App</td>\n      <td>Ios App</td>\n      <td>2019-02-14</td>\n      <td>2021-04-05</td>\n      <td>2021-04-05</td>\n      <td>2020-02-17</td>\n      <td>2.00</td>\n      <td>81.00</td>\n      <td>3997.55</td>\n      <td>242.81</td>\n      <td>[ERKEK]</td>\n      <td>83.00</td>\n      <td>4240.36</td>\n    </tr>\n    <tr>\n      <th>7613</th>\n      <td>73fd19aa-9e37-11e9-9897-000d3a38a36f</td>\n      <td>Ios App</td>\n      <td>Offline</td>\n      <td>2014-01-14</td>\n      <td>2021-05-18</td>\n      <td>2021-01-30</td>\n      <td>2021-05-18</td>\n      <td>81.00</td>\n      <td>1.00</td>\n      <td>1263.76</td>\n      <td>32654.34</td>\n      <td>[ERKEK, COCUK, KADIN, AKTIFSPOR]</td>\n      <td>82.00</td>\n      <td>33918.10</td>\n    </tr>\n    <tr>\n      <th>9347</th>\n      <td>44d032ee-a0d4-11e9-a2fc-000d3a38a36f</td>\n      <td>Mobile</td>\n      <td>Mobile</td>\n      <td>2019-02-11</td>\n      <td>2021-02-11</td>\n      <td>2021-02-11</td>\n      <td>2020-12-24</td>\n      <td>3.00</td>\n      <td>74.00</td>\n      <td>4640.77</td>\n      <td>543.28</td>\n      <td>[KADIN, AKTIFSPOR]</td>\n      <td>77.00</td>\n      <td>5184.05</td>\n    </tr>\n    <tr>\n      <th>10954</th>\n      <td>b27e241a-a901-11e9-a2fc-000d3a38a36f</td>\n      <td>Mobile</td>\n      <td>Mobile</td>\n      <td>2015-09-12</td>\n      <td>2021-04-01</td>\n      <td>2021-04-01</td>\n      <td>2019-10-08</td>\n      <td>72.00</td>\n      <td>3.00</td>\n      <td>292.93</td>\n      <td>5004.95</td>\n      <td>[AKTIFCOCUK, ERKEK, KADIN, AKTIFSPOR]</td>\n      <td>75.00</td>\n      <td>5297.88</td>\n    </tr>\n    <tr>\n      <th>8068</th>\n      <td>d696c654-2633-11ea-8e1c-000d3a38a36f</td>\n      <td>Ios App</td>\n      <td>Ios App</td>\n      <td>2017-05-10</td>\n      <td>2021-04-13</td>\n      <td>2021-04-13</td>\n      <td>2019-08-15</td>\n      <td>69.00</td>\n      <td>1.00</td>\n      <td>82.48</td>\n      <td>16836.09</td>\n      <td>[AKTIFCOCUK, ERKEK, COCUK, KADIN, AKTIFSPOR]</td>\n      <td>70.00</td>\n      <td>16918.57</td>\n    </tr>\n    <tr>\n      <th>7330</th>\n      <td>a4d534a2-5b1b-11eb-8dbd-000d3a38a36f</td>\n      <td>Desktop</td>\n      <td>Desktop</td>\n      <td>2020-02-16</td>\n      <td>2021-04-30</td>\n      <td>2021-04-30</td>\n      <td>2020-12-18</td>\n      <td>66.00</td>\n      <td>4.00</td>\n      <td>843.68</td>\n      <td>17599.89</td>\n      <td>[ERKEK, KADIN, AKTIFSPOR]</td>\n      <td>70.00</td>\n      <td>18443.57</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"# 8. Veri ön hazırlık sürecini fonksiyonlaştırınız.\ndef data_prep(dataframe):\n    dataframe[\"order_num_total\"] = dataframe[\"order_num_total_ever_offline\"] + dataframe[\"order_num_total_ever_online\"]\n    dataframe[\"customer_value_total\"] = dataframe[\"customer_value_total_ever_offline\"] + dataframe[\"customer_value_total_ever_online\"]\n    date_columns = dataframe.columns[dataframe.columns.str.contains(\"date\")]\n    dataframe[date_columns] = dataframe[date_columns].apply(pd.to_datetime)\n    return df","metadata":{"execution":{"iopub.status.busy":"2024-09-14T22:24:51.551668Z","iopub.execute_input":"2024-09-14T22:24:51.552139Z","iopub.status.idle":"2024-09-14T22:24:51.560103Z","shell.execute_reply.started":"2024-09-14T22:24:51.552086Z","shell.execute_reply":"2024-09-14T22:24:51.558625Z"},"trusted":true},"execution_count":112,"outputs":[]},{"cell_type":"code","source":"# TASK 2: Calculating RFM Metrics\n######################################################\n\n# Analysis date 2 days after the last purchase date in the dataset\nlast_order_date = df['last_order_date'].max()\nanalysis_date = dt.datetime(2021, 6, 1)\n\n# A new rfm dataframe containing customer_id, recency, frequency and monetary values\nrfm = pd.DataFrame()\nrfm[\"customer_id\"] = df[\"master_id\"]\nrfm[\"recency\"] = (analysis_date - df[\"last_order_date\"]).dt.days\nrfm[\"frequency\"] = df[\"order_num_total\"] \nrfm[\"monetary\"] = df[\"customer_value_total\"]","metadata":{"execution":{"iopub.status.busy":"2024-09-14T22:24:51.561703Z","iopub.execute_input":"2024-09-14T22:24:51.562107Z","iopub.status.idle":"2024-09-14T22:24:51.576295Z","shell.execute_reply.started":"2024-09-14T22:24:51.562066Z","shell.execute_reply":"2024-09-14T22:24:51.574913Z"},"trusted":true},"execution_count":113,"outputs":[]},{"cell_type":"code","source":"# TASK 3: Calculating RF and RFM Scores\n######################################################\n\n# Converting Recency, Frequency and Monetary metrics to scores between 1-5 with qcut and\n# Saving these scores as recency_score, frequency_score and monetary_score\n\nrfm[\"recency_score\"] = pd.qcut(rfm['recency'], 5, labels=[5,4,3,2,1])\nrfm[\"frequency_score\"] = pd.qcut(rfm['frequency'].rank(method=\"first\"), 5, labels=[1,2,3,4,5])\nrfm[\"monetary_score\"] = pd.qcut(rfm['monetary'], 5, labels=[1,2,3,4,5])\n\n# Express recency_score and frequency_score as a single variable and save as RF_SCORE\nrfm[\"RF_SCORE\"] = (rfm['recency_score'].astype(str) + rfm['frequency_score'].astype(str))\n\n# Express recency_score and frequency_score and monetary_score as a single variable and save as RFM_SCORE\nrfm[\"RFM_SCORE\"] = (rfm['recency_score'].astype(str) + rfm['frequency_score'].astype(str) + rfm['monetary_score'].astype(str))","metadata":{"execution":{"iopub.status.busy":"2024-09-14T22:24:51.577940Z","iopub.execute_input":"2024-09-14T22:24:51.578402Z","iopub.status.idle":"2024-09-14T22:24:51.627573Z","shell.execute_reply.started":"2024-09-14T22:24:51.578322Z","shell.execute_reply":"2024-09-14T22:24:51.626339Z"},"trusted":true},"execution_count":114,"outputs":[]},{"cell_type":"code","source":"#TASK 4: Defining RF Scores as Segments\n######################################################\n\n# Defining segments to make the created RFM scores more explainable and converting RF_SCORE into segments with the help of the defined seg_map\nseg_map = {\nr'[1-2][1-2]': 'hibernating',\nr'[1-2][3-4]': 'at_risk',\nr'[1-2]5': 'cant_loose',\nr'3[1-2]': 'about_to_sleep',\nr'33': 'need_attention',\nr'[3-4][4-5]': 'loyal_customers', \nr'41': 'promising', \nr'51': 'new_customers', \nr'[4-5][2-3]': 'potential_loyalists', \nr'5[4-5]': 'champions' } \n\nrfm['segment'] = rfm['RF_SCORE'].replace(seg_map, regex=True) \nrfm.head()","metadata":{"execution":{"iopub.status.busy":"2024-09-14T22:24:51.629083Z","iopub.execute_input":"2024-09-14T22:24:51.629488Z","iopub.status.idle":"2024-09-14T22:24:52.060162Z","shell.execute_reply.started":"2024-09-14T22:24:51.629446Z","shell.execute_reply":"2024-09-14T22:24:52.058993Z"},"trusted":true},"execution_count":115,"outputs":[{"execution_count":115,"output_type":"execute_result","data":{"text/plain":"                            customer_id  recency  frequency  monetary recency_score frequency_score monetary_score RF_SCORE RFM_SCORE          segment\n0  cc294636-19f0-11eb-8d74-000d3a38a36f       95       5.00    939.37             3               4              4       34       344  loyal_customers\n1  f431bd5a-ab7b-11e9-a2fc-000d3a38a36f      105      21.00   2013.55             3               5              5       35       355  loyal_customers\n2  69b69676-1a40-11ea-941b-000d3a38a36f      186       5.00    585.32             2               4              3       24       243          at_risk\n3  1854e56c-491f-11eb-806e-000d3a38a36f      135       2.00    121.97             3               1              1       31       311   about_to_sleep\n4  d6ea1074-f1f5-11e9-9346-000d3a38a36f       86       2.00    209.98             3               1              1       31       311   about_to_sleep","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>customer_id</th>\n      <th>recency</th>\n      <th>frequency</th>\n      <th>monetary</th>\n      <th>recency_score</th>\n      <th>frequency_score</th>\n      <th>monetary_score</th>\n      <th>RF_SCORE</th>\n      <th>RFM_SCORE</th>\n      <th>segment</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>cc294636-19f0-11eb-8d74-000d3a38a36f</td>\n      <td>95</td>\n      <td>5.00</td>\n      <td>939.37</td>\n      <td>3</td>\n      <td>4</td>\n      <td>4</td>\n      <td>34</td>\n      <td>344</td>\n      <td>loyal_customers</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>f431bd5a-ab7b-11e9-a2fc-000d3a38a36f</td>\n      <td>105</td>\n      <td>21.00</td>\n      <td>2013.55</td>\n      <td>3</td>\n      <td>5</td>\n      <td>5</td>\n      <td>35</td>\n      <td>355</td>\n      <td>loyal_customers</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>69b69676-1a40-11ea-941b-000d3a38a36f</td>\n      <td>186</td>\n      <td>5.00</td>\n      <td>585.32</td>\n      <td>2</td>\n      <td>4</td>\n      <td>3</td>\n      <td>24</td>\n      <td>243</td>\n      <td>at_risk</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1854e56c-491f-11eb-806e-000d3a38a36f</td>\n      <td>135</td>\n      <td>2.00</td>\n      <td>121.97</td>\n      <td>3</td>\n      <td>1</td>\n      <td>1</td>\n      <td>31</td>\n      <td>311</td>\n      <td>about_to_sleep</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>d6ea1074-f1f5-11e9-9346-000d3a38a36f</td>\n      <td>86</td>\n      <td>2.00</td>\n      <td>209.98</td>\n      <td>3</td>\n      <td>1</td>\n      <td>1</td>\n      <td>31</td>\n      <td>311</td>\n      <td>about_to_sleep</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"# TASK 5: Time for action!\n#####################################################\n\n# 1. Examine the recency, frequency and monetary averages of the segments.\nrfm[[\"segment\", \"recency\", \"frequency\", \"monetary\"]].groupby(\"segment\").agg([\"mean\", \"count\"])","metadata":{"execution":{"iopub.status.busy":"2024-09-14T22:24:52.061583Z","iopub.execute_input":"2024-09-14T22:24:52.061949Z","iopub.status.idle":"2024-09-14T22:24:52.091027Z","shell.execute_reply.started":"2024-09-14T22:24:52.061911Z","shell.execute_reply":"2024-09-14T22:24:52.089668Z"},"trusted":true},"execution_count":116,"outputs":[{"execution_count":116,"output_type":"execute_result","data":{"text/plain":"                    recency       frequency       monetary      \n                       mean count      mean count     mean count\nsegment                                                         \nabout_to_sleep       113.79  1629      2.40  1629   359.01  1629\nat_risk              241.61  3131      4.47  3131   646.61  3131\ncant_loose           235.44  1200     10.70  1200  1474.47  1200\nchampions             17.11  1932      8.93  1932  1406.63  1932\nhibernating          247.95  3604      2.39  3604   366.27  3604\nloyal_customers       82.59  3361      8.37  3361  1216.82  3361\nneed_attention       113.83   823      3.73   823   562.14   823\nnew_customers         17.92   680      2.00   680   339.96   680\npotential_loyalists   37.16  2938      3.30  2938   533.18  2938\npromising             58.92   647      2.00   647   335.67   647","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead tr th {\n        text-align: left;\n    }\n\n    .dataframe thead tr:last-of-type th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr>\n      <th></th>\n      <th colspan=\"2\" halign=\"left\">recency</th>\n      <th colspan=\"2\" halign=\"left\">frequency</th>\n      <th colspan=\"2\" halign=\"left\">monetary</th>\n    </tr>\n    <tr>\n      <th></th>\n      <th>mean</th>\n      <th>count</th>\n      <th>mean</th>\n      <th>count</th>\n      <th>mean</th>\n      <th>count</th>\n    </tr>\n    <tr>\n      <th>segment</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>about_to_sleep</th>\n      <td>113.79</td>\n      <td>1629</td>\n      <td>2.40</td>\n      <td>1629</td>\n      <td>359.01</td>\n      <td>1629</td>\n    </tr>\n    <tr>\n      <th>at_risk</th>\n      <td>241.61</td>\n      <td>3131</td>\n      <td>4.47</td>\n      <td>3131</td>\n      <td>646.61</td>\n      <td>3131</td>\n    </tr>\n    <tr>\n      <th>cant_loose</th>\n      <td>235.44</td>\n      <td>1200</td>\n      <td>10.70</td>\n      <td>1200</td>\n      <td>1474.47</td>\n      <td>1200</td>\n    </tr>\n    <tr>\n      <th>champions</th>\n      <td>17.11</td>\n      <td>1932</td>\n      <td>8.93</td>\n      <td>1932</td>\n      <td>1406.63</td>\n      <td>1932</td>\n    </tr>\n    <tr>\n      <th>hibernating</th>\n      <td>247.95</td>\n      <td>3604</td>\n      <td>2.39</td>\n      <td>3604</td>\n      <td>366.27</td>\n      <td>3604</td>\n    </tr>\n    <tr>\n      <th>loyal_customers</th>\n      <td>82.59</td>\n      <td>3361</td>\n      <td>8.37</td>\n      <td>3361</td>\n      <td>1216.82</td>\n      <td>3361</td>\n    </tr>\n    <tr>\n      <th>need_attention</th>\n      <td>113.83</td>\n      <td>823</td>\n      <td>3.73</td>\n      <td>823</td>\n      <td>562.14</td>\n      <td>823</td>\n    </tr>\n    <tr>\n      <th>new_customers</th>\n      <td>17.92</td>\n      <td>680</td>\n      <td>2.00</td>\n      <td>680</td>\n      <td>339.96</td>\n      <td>680</td>\n    </tr>\n    <tr>\n      <th>potential_loyalists</th>\n      <td>37.16</td>\n      <td>2938</td>\n      <td>3.30</td>\n      <td>2938</td>\n      <td>533.18</td>\n      <td>2938</td>\n    </tr>\n    <tr>\n      <th>promising</th>\n      <td>58.92</td>\n      <td>647</td>\n      <td>2.00</td>\n      <td>647</td>\n      <td>335.67</td>\n      <td>647</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"\n# 2. Find the customers in the relevant profile for 2 cases with the help of RFM analysis and save the customer ids to csv.\n\n# a. FLO is adding a new women's shoe brand to its portfolio. The product prices of the brand it added are above general customer preferences. For this reason, it is desired to contact the customers in the profile who will be interested in the brand's\n# promotion and product sales. These customers are planned to be loyal, average over 250 TL and\n# women category shoppers. Save the customers' id numbers in the csv file as new_brand_target_customer_id.cvs.\n\ntarget_segments_customer_ids = rfm[rfm[\"segment\"].isin([\"champions\",\"loyal_customers\"])][\"customer_id\"]\ncust_ids = df[(df[\"master_id\"].isin(target_segments_customer_ids)) & (df[\"customer_value_total\"]/df[\"order_num_total\"] > 250)&(df[\"interested_in_categories_12\"].str.contains(\"KADIN\"))][\"master_id\"]\ncust_ids.to_csv(\"new_brand_target_customers_id.csv\", index=False)\ncust_ids.shape","metadata":{"execution":{"iopub.status.busy":"2024-09-14T22:24:52.092549Z","iopub.execute_input":"2024-09-14T22:24:52.092985Z","iopub.status.idle":"2024-09-14T22:24:52.130485Z","shell.execute_reply.started":"2024-09-14T22:24:52.092943Z","shell.execute_reply":"2024-09-14T22:24:52.129161Z"},"trusted":true},"execution_count":117,"outputs":[{"execution_count":117,"output_type":"execute_result","data":{"text/plain":"(148,)"},"metadata":{}}]},{"cell_type":"code","source":"# b. A discount of nearly 40% is planned for Men's and Children's products. This discount is intended to specifically target customers who have been good customers in the past but have not shopped in a long time and new customers. \n#   Save the IDs of customers with the appropriate profiles in the csv file as discount_target_customer_ids.csv.\n\ntarget_segments_customer_ids = rfm[rfm[\"segment\"].isin([\"cant_loose\",\"at_risk\",\"new_customers\"])][\"customer_id\"]\ncust_ids = df[(df[\"master_id\"].isin(target_segments_customer_ids))][\"master_id\"]\ncust_ids.to_csv(\"discount_target_customer_ids.csv\", index=False)\ncust_ids.shape","metadata":{"execution":{"iopub.status.busy":"2024-09-14T22:24:52.132086Z","iopub.execute_input":"2024-09-14T22:24:52.132603Z","iopub.status.idle":"2024-09-14T22:24:52.168599Z","shell.execute_reply.started":"2024-09-14T22:24:52.132557Z","shell.execute_reply":"2024-09-14T22:24:52.167118Z"},"trusted":true},"execution_count":118,"outputs":[{"execution_count":118,"output_type":"execute_result","data":{"text/plain":"(5011,)"},"metadata":{}}]},{"cell_type":"code","source":"# TASK 6: Define the process as a function\ndef create_rfm(dataframe):\n    dataframe[\"order_num_total\"] = dataframe[\"order_num_total_ever_offline\"] + dataframe[\"order_num_total_ever_online\"]\n    dataframe[\"customer_value_total\"] = dataframe[\"customer_value_total_ever_offline\"] + dataframe[\"customer_value_total_ever_online\"]\n    date_columns = dataframe.columns[dataframe.columns.str.contains(\"date\")]\n    dataframe[date_columns] = dataframe[date_columns].apply(pd.to_datetime)\n\n    last_order_date = dataframe['last_order_date'].max()\n    analysis_date = last_order_date + timedelta(days=2)\n\n    # customer_id, recency, frequnecy ve monetary değerlerinin yer aldığı yeni bir rfm dataframe\n    rfm = pd.DataFrame()\n    rfm[\"customer_id\"] = dataframe[\"master_id\"]\n    rfm[\"recency\"] = (analysis_date - dataframe[\"last_order_date\"]).dt.days\n    rfm[\"frequency\"] = dataframe[\"order_num_total\"]\n    rfm[\"monetary\"] = dataframe[\"customer_value_total\"]\n\n    rfm[\"recency_score\"] = pd.qcut(rfm['recency'], 5, labels=[5,4,3,2,1])\n    rfm[\"frequency_score\"] = pd.qcut(rfm['frequency'].rank(method=\"first\"), 5, labels=[1,2,3,4,5])\n    rfm[\"monetary_score\"] = pd.qcut(rfm['monetary'], 5, labels=[1,2,3,4,5])\n\n    rfm[\"RF_SCORE\"] = (rfm['recency_score'].astype(str) + rfm['frequency_score'].astype(str))\n    rfm[\"RFM_SCORE\"] = (rfm['recency_score'].astype(str) + rfm['frequency_score'].astype(str) + rfm['monetary_score'].astype(str))\n\n    seg_map = {\n        r'[1-2][1-2]': 'hibernating',\n        r'[1-2][3-4]': 'at_risk',\n        r'[1-2]5': 'cant_loose',\n        r'3[1-2]': 'about_to_sleep',\n        r'33': 'need_attention',\n        r'[3-4][4-5]': 'loyal_customers',\n        r'41': 'promising',\n        r'51': 'new_customers',\n        r'[4-5][2-3]': 'potential_loyalists',\n        r'5[4-5]': 'champions'\n     }\n    rfm['segment'] = rfm['RF_SCORE'].replace(seg_map, regex=True)\n\n    return rfm[[\"customer_id\", \"recency\",\"frequency\",\"monetary\",\"RF_SCORE\",\"RFM_SCORE\",\"segment\"]]","metadata":{"execution":{"iopub.status.busy":"2024-09-14T22:24:52.170445Z","iopub.execute_input":"2024-09-14T22:24:52.170853Z","iopub.status.idle":"2024-09-14T22:24:52.186982Z","shell.execute_reply.started":"2024-09-14T22:24:52.170813Z","shell.execute_reply":"2024-09-14T22:24:52.185071Z"},"trusted":true},"execution_count":119,"outputs":[]},{"cell_type":"code","source":"# TASK 7: Run the  process as a function\nrfm_df = create_rfm(df)\nrfm_df.head()","metadata":{"execution":{"iopub.status.busy":"2024-09-14T22:24:52.188499Z","iopub.execute_input":"2024-09-14T22:24:52.189520Z","iopub.status.idle":"2024-09-14T22:24:52.723559Z","shell.execute_reply.started":"2024-09-14T22:24:52.189449Z","shell.execute_reply":"2024-09-14T22:24:52.722310Z"},"trusted":true},"execution_count":120,"outputs":[{"execution_count":120,"output_type":"execute_result","data":{"text/plain":"                            customer_id  recency  frequency  monetary RF_SCORE RFM_SCORE          segment\n0  cc294636-19f0-11eb-8d74-000d3a38a36f       95       5.00    939.37       34       344  loyal_customers\n1  f431bd5a-ab7b-11e9-a2fc-000d3a38a36f      105      21.00   2013.55       35       355  loyal_customers\n2  69b69676-1a40-11ea-941b-000d3a38a36f      186       5.00    585.32       24       243          at_risk\n3  1854e56c-491f-11eb-806e-000d3a38a36f      135       2.00    121.97       31       311   about_to_sleep\n4  d6ea1074-f1f5-11e9-9346-000d3a38a36f       86       2.00    209.98       31       311   about_to_sleep","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>customer_id</th>\n      <th>recency</th>\n      <th>frequency</th>\n      <th>monetary</th>\n      <th>RF_SCORE</th>\n      <th>RFM_SCORE</th>\n      <th>segment</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>cc294636-19f0-11eb-8d74-000d3a38a36f</td>\n      <td>95</td>\n      <td>5.00</td>\n      <td>939.37</td>\n      <td>34</td>\n      <td>344</td>\n      <td>loyal_customers</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>f431bd5a-ab7b-11e9-a2fc-000d3a38a36f</td>\n      <td>105</td>\n      <td>21.00</td>\n      <td>2013.55</td>\n      <td>35</td>\n      <td>355</td>\n      <td>loyal_customers</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>69b69676-1a40-11ea-941b-000d3a38a36f</td>\n      <td>186</td>\n      <td>5.00</td>\n      <td>585.32</td>\n      <td>24</td>\n      <td>243</td>\n      <td>at_risk</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1854e56c-491f-11eb-806e-000d3a38a36f</td>\n      <td>135</td>\n      <td>2.00</td>\n      <td>121.97</td>\n      <td>31</td>\n      <td>311</td>\n      <td>about_to_sleep</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>d6ea1074-f1f5-11e9-9346-000d3a38a36f</td>\n      <td>86</td>\n      <td>2.00</td>\n      <td>209.98</td>\n      <td>31</td>\n      <td>311</td>\n      <td>about_to_sleep</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]}]}